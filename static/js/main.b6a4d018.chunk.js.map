{"version":3,"sources":["components/Line/Line.js","components/Search/Search.js","components/ProductsSelection/ProductsSelection.js","components/ProductsValidation/ProductsValidation.js","components/BackOrderOptions/BackOrderOption.js","components/BackOrderOptions/BackOrderOptions.js","components/Modal/Modal.js","containers/Order/Order.js","components/Product/Product.js","containers/App.js","serviceWorker.js","index.js"],"names":["Line","props","className","context","product","hide","code","onClick","openProductModal","name","dimensions","moneyFormat","unitPrice","onChange","e","changeFormat","parseInt","target","value","defaultValue","format","id","formats","map","f","index","key","qty","type","changeQuantity","quantity","subtotal","boQuantity","Search","searchHandler","search","productCode","productName","ProductsSelection","products","v","formatId","total","submit","disabled","ProductsValidation","order","nb","back","BackOrderOption","click","option","description","replace","Math","floor","inventory","BackOrderOptions","options","o","selectOption","Modal","close","children","Order","useState","step","setStep","setProducts","setOrder","backOrderProducts","setBackOrderProducts","title","setTitle","setTotal","backOrderOptions","setSearch","useEffect","newProducts","newTotal","i","length","filteredProducts","p","includes","filter","recalculateProducts","oldProducts","toLocaleString","style","currency","minimumFractionDigits","constructOrder","stepOneJsx","productId","updatedProducts","find","stepTwoJsx","console","log","optionId","newOrder","ogQty","recalculatedOrder","Product","infos","App","open","toggleModal","setToggleModal","fetchProducts","distantProducts","Array","keys","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b6a4d018.chunk.js","sourcesContent":["import React from 'react';\nimport './Line.css';\n\nconst Line = props => {\n    return (\n        <tr className=\"Line\">\n            { props.context === -1 ?\n                <>\n                    <th>Code</th>\n                    <th>Name</th>\n                    <th>Dimensions</th>\n                    <th>Unit price</th>\n                    <th>Format</th>\n                    <th>Quantity</th>\n                    <th>Subtotal</th>\n                </>\n            : null }\n\n            { props.context === 1 && !props.product.hide ?\n                <>\n                    <td>[{props.product.code}]</td>\n                    <td onClick={props.openProductModal}><span className=\"name\">{props.product.name}</span></td>\n                    <td>({props.product.dimensions})</td>\n                    <td>{props.moneyFormat(props.product.unitPrice)}</td>\n                    <td><select\n                            onChange={(e) => props.changeFormat(parseInt(e.target.value))}\n                            defaultValue={props.product.format.id}>\n                        {props.product.formats.map((f, index) => {\n                            return <option value={f.id} key={index}>{f.name} ({f.qty} units)</option>\n                        })}\n                    </select></td>\n                    <td><input type=\"number\" onChange={(e) => props.changeQuantity(e.target.value !== '' ? parseInt(e.target.value) : 0)} value={props.product.quantity} /></td>\n                    <td>{props.moneyFormat(props.product.subtotal)}</td>\n                </>\n            : null }\n\n            { props.context === 2 ?\n                <>\n                    <td>[{props.product.code}]</td>\n                    <td onClick={props.openProductModal}><span className=\"name\">{props.product.name}</span></td>\n                    <td>({props.product.dimensions})</td>\n                    <td>{props.moneyFormat(props.product.unitPrice)}</td>\n                    <td>{props.product.format.name} ({props.product.format.qty} units)</td>\n                    <td>\n                        {props.product.quantity} ({props.product.quantity * props.product.format.qty} units)\n                        { props.product.boQuantity > 0 ?\n                            <span> (+ {props.product.boQuantity} {props.product.format.name}(s) / bo)</span>\n                        : null }\n                    </td>\n                    <td>{props.moneyFormat(props.product.subtotal)}</td>\n                </>\n            : null }\n        </tr>\n    );\n}\n\nexport default Line;\n","import React from 'react';\n\nconst Search = props => {\n    return (\n        <div className=\"Search\">\n            <strong>Search</strong>\n            <ul>\n                <li>\n                    <span>Code</span>\n                    <input onChange={e => props.searchHandler({'productCode': e.target.value})} value={props.search.productCode} />\n                </li>\n                <li>\n                    <span>Name</span>\n                    <input onChange={e => props.searchHandler({'productName': e.target.value})} value={props.search.productName} />\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Search;\n","import React from 'react';\nimport Line from '../Line/Line';\nimport Search from '../Search/Search';\n\nconst ProductsSelection = props => {\n    return (\n        <div className=\"ProductsSelection\">\n            <Search products={props.products} search={props.search} searchHandler={v => props.searchHandler(v)} />\n\n            <table>\n                <thead>\n                    <Line context={-1} />\n                </thead>\n                <tbody>\n                    {props.products.map((product, index) => {\n                        return <Line\n                            changeQuantity={qty => props.changeQuantity(product.id, qty)}\n                            changeFormat={formatId => props.changeFormat(product.id, formatId)}\n                            openProductModal={() => props.openProductModal(product.id)}\n                            moneyFormat={props.moneyFormat}\n                            product={product}\n                            context={1}\n                            key={index} />\n                    })}\n                </tbody>\n            </table>\n            <p>Total: <strong>{props.moneyFormat(props.total)}</strong></p>\n            <button onClick={props.submit} disabled={props.total <= 0}>Next step</button>\n        </div>\n    );\n}\n\nexport default ProductsSelection;\n","import React from 'react';\nimport Line from '../Line/Line';\n\n\nconst ProductsValidation = props => {\n    return (\n        <div className=\"ProductsValidation\">\n            <table>\n                <thead>\n                    <Line context={-1} />\n                </thead>\n                <tbody>\n                    {props.order.map((product, index) => {\n                        return <Line\n                            moneyFormat={nb => props.moneyFormat(nb)}\n                            product={product}\n                            context={2}\n                            openProductModal={() => props.openProductModal(product.id)}\n                            key={index} />\n                    })}\n                </tbody>\n            </table>\n            <p>Total: <strong>{props.moneyFormat(props.total)}</strong></p>\n            <button onClick={props.back}>Edit order</button>\n            <button onClick={props.submit}>Next step</button>\n        </div>\n    );\n}\n\nexport default ProductsValidation;\n","import React from 'react';\nimport './BackOrderOptions.css';\n\nconst BackOrderOption = props => {\n    return (\n        <li className=\"BackOrderOption\" onClick={props.click}>\n            <strong>{props.option.name}</strong>\n            <p>{\n                    props.option.description\n                    .replace(/{CODE}/, props.product.code)\n                    .replace(/{AVAILQTY}/, Math.floor(props.product.inventory / props.product.format.qty))\n                    .replace(/{AVAILUNITS}/, props.product.inventory + ' unit(s)')\n                    .replace(/{BOUNITS}/, props.product.quantity * props.product.format.qty - props.product.inventory + ' unit(s)')\n                    .replace(/{FORMAT}/, props.product.format.name + '(s)')\n                }</p>\n        </li>\n    );\n}\n\nexport default BackOrderOption;\n","import React from 'react';\nimport BackOrderOption from './BackOrderOption';\n\nconst BackOrderOptions = props => {\n    return (\n        <ul className=\"BackOrderOptions\">\n            { props.options.map((o, index) => <BackOrderOption\n                                        option={o}\n                                        product={props.product}\n                                        click={() => props.selectOption(o.id)}\n                                        key={index} /> ) }\n        </ul>\n    );\n}\n\nexport default BackOrderOptions;\n","import React from 'react';\nimport './Modal.css';\n\nconst Modal = props => {\n    return (\n        <div className=\"Modal\">\n            <div className=\"darken\" onClick={props.close}></div>\n            <div className=\"content\">\n                { props.close ?\n                    <span className=\"close\" onClick={props.close}>Close</span>\n                : null }\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport ProductsSelection from '../../components/ProductsSelection/ProductsSelection';\nimport ProductsValidation from '../../components/ProductsValidation/ProductsValidation';\nimport BackOrderOptions from '../../components/BackOrderOptions/BackOrderOptions';\nimport Modal from '../../components/Modal/Modal';\n\nconst Order = props => {\n    const [step, setStep] = useState(1);\n    const [products, setProducts] = useState([]);\n    const [order, setOrder] = useState([]);\n    const [backOrderProducts, setBackOrderProducts] = useState([]);\n    const [title, setTitle] = useState('Place an order');\n    const [total, setTotal] = useState(0);\n    const [backOrderOptions, setBackOrderOptions] = useState([\n        {id: 1, name: 'Don\\'t order this product', description: 'Remove {CODE} from your order'},\n        {id: 2, name: 'Only order the available inventory', description: 'Only order {AVAILQTY} {FORMAT} ( {AVAILUNITS} )'},\n        {id: 3, name: 'Order the available inventory and put the rest in back order', description: 'Only order {AVAILQTY} {FORMAT} ( {AVAILUNITS} ) and put {BOUNITS} in back order'},\n    ]);\n    const [search, setSearch] = useState({'productName': '', 'productCode': ''});\n\n    useEffect(() => { // Set default for products\n        const newProducts = [...props.products];\n        newProducts.map(product => {\n            product.format = product.formats[0];\n            product.quantity = 0;\n            product.subtotal = 0;\n            product.boQuantity = 0;\n            product.hide = false;\n            return product;\n        });\n        setProducts(newProducts);\n    }, [props.products]);\n\n    useEffect(() => { // Calculate global order details\n        let newTotal = 0;\n        for (var i = 0; i < products.length; i++) {\n            newTotal += products[i].subtotal;\n        }\n        setTotal(newTotal)\n    }, [products]);\n\n    useEffect(() => { // Search\n        let filteredProducts = [...products];\n        filteredProducts.map(p => {\n            if (!(p.code.includes(search.productCode) && p.name.includes(search.productName))) {\n                p.hide = true;\n            } else {\n                p.hide = false;\n            }\n            return p;\n        });\n        setProducts(filteredProducts);\n    }, [search]);\n\n    useEffect(() => { // Look for back orders in order\n        setBackOrderProducts([...order].filter(p => (p.quantity * p.format.qty) > p.inventory));\n    }, [order]);\n\n    const recalculateProducts = oldProducts => {\n        let newProducts = [...oldProducts];\n        newProducts.map(product => {\n            product.subtotal = (product.format.qty * product.quantity) * product.unitPrice;\n            return product;\n        });\n        return newProducts;\n    }\n\n    const submitOrderHandler = () => {\n        constructOrder();\n        setTitle('Validate order');\n        setStep(2);\n    }\n\n    const validateOrderHandler = () => {\n        console.log(order);\n    }\n\n    const goBackHandler = () => {\n        setOrder([]);\n        setSearch({'productName': '', 'productCode': ''});\n        setTitle('Modify order');\n        setStep(1);\n    }\n\n    const moneyFormat = nb => nb.toLocaleString('en-CA', {\n        style: 'currency',\n        currency: 'CAD',\n        minimumFractionDigits: 4\n    });\n\n    const changeFormat = (productId, formatId) => {\n        let updatedProducts = [...products];\n        const product = updatedProducts.find(p => p.id === productId);\n        product.format = product.formats.find(f => f.id === formatId);\n        updatedProducts = recalculateProducts(updatedProducts);\n        setProducts(updatedProducts);\n    }\n\n    const changeQuantity = (productId, qty) => {\n        let updatedProducts = [...products];\n        const product = updatedProducts.find(p => p.id === productId);\n        product.quantity = qty;\n        updatedProducts = recalculateProducts(updatedProducts);\n        setProducts(updatedProducts);\n    }\n\n    const constructOrder = () => {\n        setOrder([...props.products].filter(p => p.quantity > 0));\n    }\n\n    const searchHandler = value => {\n        setSearch({...search, ...value});\n    }\n\n    const selectOption = (optionId, productId) => {\n        let newOrder = [...order].map(p => {\n            if (p.id === productId) {\n\n                if (optionId === 1) {\n                    p.quantity = 0;\n                } else if (optionId === 2) {\n                    p.quantity = Math.floor(p.inventory / p.format.qty);\n                } else if (optionId === 3) {\n                    const ogQty = p.quantity;\n                    p.quantity = Math.floor(p.inventory / p.format.qty);\n                    p.boQuantity = ogQty - p.quantity;\n                }\n\n            }\n            return p;\n        });\n        newOrder = newOrder.filter(p => p.quantity > 0);\n        const recalculatedOrder = recalculateProducts(newOrder);\n        setOrder(recalculatedOrder);\n    }\n\n    const stepOneJsx = <ProductsSelection\n                            changeQuantity={(productId, qty) => changeQuantity(productId, qty)}\n                            changeFormat={(productId, formatId) => changeFormat(productId, formatId)}\n                            openProductModal={id => props.openProductModal(id)}\n                            products={products}\n                            total={total}\n                            search={search}\n                            searchHandler={v => searchHandler(v)}\n                            submit={submitOrderHandler}\n                            moneyFormat={nb => moneyFormat(nb)} />;\n\n    const stepTwoJsx = <ProductsValidation\n                            order={order}\n                            openProductModal={id => props.openProductModal(id)}\n                            total={total}\n                            submit={validateOrderHandler}\n                            back={goBackHandler}\n                            moneyFormat={nb => moneyFormat(nb)} />;\n\n    return (\n        <div className=\"Order\">\n            <h1>{title}</h1>\n            { step === 1 ? stepOneJsx : null }\n            { step === 2 ? stepTwoJsx : null }\n\n            { backOrderProducts.length > 0 ?\n                <Modal>\n                    <h1>This product is in back order</h1>\n                    <h2>[{backOrderProducts[0].code}] {backOrderProducts[0].name}</h2>\n                    <span>Please select one of these options</span>\n                    <BackOrderOptions\n                        options={backOrderOptions}\n                        product={backOrderProducts[0]}\n                        selectOption={id => selectOption(id, backOrderProducts[0].id)} />\n                </Modal>\n            : null }\n        </div>\n    );\n}\n\nexport default Order;\n","import React from 'react';\n\nconst Product = props => {\n    return (\n        <div className=\"Product\">\n            <h1>{props.infos.name}</h1>\n            <h2>{props.infos.code}</h2>\n            <p>{props.infos.description}</p>\n        </div>\n    );\n}\n\nexport default Product;\n","import React, { useState, useEffect } from 'react';\nimport Order from './Order/Order';\nimport Modal from '../components/Modal/Modal';\nimport Product from '../components/Product/Product';\n\nimport './App.css';\n\nconst App = props => {\n    const [products, setProducts] = useState([]);\n    const [toggleModal, setToggleModal] = useState({ open: false, product: null });\n\n    const productFactory = nb => [...Array(nb).keys()].map(i => ( {\n        id: i + 1,\n        code: 'AA-000' + i,\n        name: 'Contenant mince pour mets à emporter à rebord doublé',\n        dimensions: (i * 3 + 2) + 'PO',\n        inventory: 1000,\n        formats: [\n            { id: 1, name: 'Boite', qty: 100  },\n            { id: 2, name: 'Caisse', qty: 1000  },\n        ],\n        unitPrice: 0.0852 * i + 0.7,\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis vitae enim quis ligula facilisis viverra. Sed tortor sem, facilisis in nibh in, aliquet elementum felis. Sed sit amet gravida orci, eu rutrum urna. Pellentesque auctor orci at nunc accumsan cursus. Maecenas tempus mauris eget tempus eleifend. Sed mollis, leo in cursus convallis, risus metus sodales risus, ut vestibulum felis dolor non enim. Aliquam lobortis massa eget sodales sollicitudin.',\n    } ));\n\n    const fetchProducts = () => {\n        const distantProducts = productFactory(5);\n        setProducts(distantProducts);\n    }\n\n    // \"mounted\"\n    useEffect(() => {\n        fetchProducts();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Order\n                openProductModal={id => setToggleModal({ open: true, product: id })}\n                products={products} />\n\n            { toggleModal.open ?\n                <Modal close={() => setToggleModal({ open: false, product: null })}>\n                    <Product infos={{...products.find(p => p.id === toggleModal.product)}} />\n                </Modal>\n            : null }\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}